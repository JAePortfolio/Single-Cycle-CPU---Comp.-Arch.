--parallel_add DEVICE_FAMILY="Cyclone II" MSW_SUBTRACT="NO" PIPELINE=0 REPRESENTATION="UNSIGNED" RESULT_ALIGNMENT="LSB" SHIFT=0 SIZE=17 WIDTH=1 WIDTHR=6 data result
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_padd 2013:06:12:18:03:43:SJ cbx_parallel_add 2013:06:12:18:03:43:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ cbx_util_mgl 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION soft (in)
RETURNS ( out);

--synthesis_resources = lut 46 
SUBDESIGN par_add_cpe
( 
	data[16..0]	:	input;
	result[5..0]	:	output;
) 
VARIABLE
	add1_result[1..0]	:	WIRE;
	add13_result[3..0]	:	WIRE;
	add17_result[1..0]	:	WIRE;
	add21_result[1..0]	:	WIRE;
	add25_result[2..0]	:	WIRE;
	add29_result[4..0]	:	WIRE;
	add33_result[1..0]	:	WIRE;
	add37_result[1..0]	:	WIRE;
	add41_result[2..0]	:	WIRE;
	add45_result[1..0]	:	WIRE;
	add49_result[1..0]	:	WIRE;
	add5_result[2..0]	:	WIRE;
	add53_result[2..0]	:	WIRE;
	add57_result[3..0]	:	WIRE;
	add61_result[4..0]	:	WIRE;
	add9_result[1..0]	:	WIRE;
	sft10a[1..0] : soft;
	sft11a[1..0] : soft;
	sft12a[1..0] : soft;
	sft14a[3..0] : soft;
	sft15a[3..0] : soft;
	sft16a[3..0] : soft;
	sft18a[1..0] : soft;
	sft19a[1..0] : soft;
	sft20a[1..0] : soft;
	sft22a[1..0] : soft;
	sft23a[1..0] : soft;
	sft24a[1..0] : soft;
	sft26a[2..0] : soft;
	sft27a[2..0] : soft;
	sft28a[2..0] : soft;
	sft2a[1..0] : soft;
	sft30a[4..0] : soft;
	sft31a[4..0] : soft;
	sft32a[4..0] : soft;
	sft34a[1..0] : soft;
	sft35a[1..0] : soft;
	sft36a[1..0] : soft;
	sft38a[1..0] : soft;
	sft39a[1..0] : soft;
	sft3a[1..0] : soft;
	sft40a[1..0] : soft;
	sft42a[2..0] : soft;
	sft43a[2..0] : soft;
	sft44a[2..0] : soft;
	sft46a[1..0] : soft;
	sft47a[1..0] : soft;
	sft48a[1..0] : soft;
	sft4a[1..0] : soft;
	sft50a[1..0] : soft;
	sft51a[1..0] : soft;
	sft52a[1..0] : soft;
	sft54a[2..0] : soft;
	sft55a[2..0] : soft;
	sft56a[2..0] : soft;
	sft58a[3..0] : soft;
	sft59a[3..0] : soft;
	sft60a[3..0] : soft;
	sft62a[4..0] : soft;
	sft63a[4..0] : soft;
	sft64a[4..0] : soft;
	sft6a[2..0] : soft;
	sft7a[2..0] : soft;
	sft8a[2..0] : soft;
	w195w	: WIRE;
	w81w	: WIRE;

BEGIN 
	add1_result[] = sft2a[].out + sft3a[].out;
	add13_result[] = sft14a[].out + sft15a[].out;
	add17_result[] = sft18a[].out + sft19a[].out;
	add21_result[] = sft22a[].out + sft23a[].out;
	add25_result[] = sft26a[].out + sft27a[].out;
	add29_result[] = sft30a[].out + sft31a[].out;
	add33_result[] = sft34a[].out + sft35a[].out;
	add37_result[] = sft38a[].out + sft39a[].out;
	add41_result[] = sft42a[].out + sft43a[].out;
	add45_result[] = sft46a[].out + sft47a[].out;
	add49_result[] = sft50a[].out + sft51a[].out;
	add5_result[] = sft6a[].out + sft7a[].out;
	add53_result[] = sft54a[].out + sft55a[].out;
	add57_result[] = sft58a[].out + sft59a[].out;
	add61_result[] = sft62a[].out + sft63a[].out;
	add9_result[] = sft10a[].out + sft11a[].out;
	sft10a[].in = ( w81w, data[12..12]);
	sft11a[].in = ( w81w, data[4..4]);
	sft12a[].in = add9_result[];
	sft14a[].in = ( w81w, ( sft8a[2..2].out, ( sft8a[1..1].out, sft8a[0..0].out)));
	sft15a[].in = ( w81w, ( w81w, ( sft36a[1..1].out, sft12a[0..0].out)));
	sft16a[].in = add13_result[];
	sft18a[].in = ( w81w, data[10..10]);
	sft19a[].in = ( w81w, data[2..2]);
	sft20a[].in = add17_result[];
	sft22a[].in = ( w81w, data[14..14]);
	sft23a[].in = ( w81w, data[6..6]);
	sft24a[].in = add21_result[];
	sft26a[].in = ( w81w, ( sft12a[1..1].out, sft20a[0..0].out));
	sft27a[].in = ( w81w, ( sft40a[1..1].out, sft24a[0..0].out));
	sft28a[].in = add25_result[];
	sft2a[].in = ( w81w, data[16..16]);
	sft30a[].in = ( w81w, ( sft16a[3..3].out, ( sft16a[2..2].out, ( sft16a[1..1].out, sft16a[0..0].out))));
	sft31a[].in = ( w81w, ( w81w, ( sft28a[2..2].out, ( sft44a[1..1].out, sft28a[0..0].out))));
	sft32a[].in = add29_result[];
	sft34a[].in = ( w81w, data[9..9]);
	sft35a[].in = ( w81w, data[0..0]);
	sft36a[].in = add33_result[];
	sft38a[].in = ( w81w, data[13..13]);
	sft39a[].in = ( w81w, data[5..5]);
	sft3a[].in = ( w81w, data[1..1]);
	sft40a[].in = add37_result[];
	sft42a[].in = ( w81w, ( sft20a[1..1].out, sft36a[0..0].out));
	sft43a[].in = ( w81w, ( sft48a[1..1].out, sft40a[0..0].out));
	sft44a[].in = add41_result[];
	sft46a[].in = ( w81w, data[11..11]);
	sft47a[].in = ( w81w, data[3..3]);
	sft48a[].in = add45_result[];
	sft4a[].in = add1_result[];
	sft50a[].in = ( w81w, data[15..15]);
	sft51a[].in = ( w81w, data[7..7]);
	sft52a[].in = add49_result[];
	sft54a[].in = ( w81w, ( sft24a[1..1].out, sft48a[0..0].out));
	sft55a[].in = ( w81w, ( sft52a[1..1].out, sft52a[0..0].out));
	sft56a[].in = add53_result[];
	sft58a[].in = ( w81w, ( sft44a[2..2].out, ( sft28a[1..1].out, sft44a[0..0].out)));
	sft59a[].in = ( w81w, ( sft56a[2..2].out, ( sft56a[1..1].out, sft56a[0..0].out)));
	sft60a[].in = add57_result[];
	sft62a[].in = ( sft32a[4..4].out, ( sft32a[3..3].out, ( sft32a[2..2].out, ( sft32a[1..1].out, sft32a[0..0].out))));
	sft63a[].in = ( w81w, ( sft60a[3..3].out, ( sft60a[2..2].out, ( sft60a[1..1].out, sft60a[0..0].out))));
	sft64a[].in = add61_result[];
	sft6a[].in = ( w81w, ( sft4a[1..1].out, data[8..8]));
	sft7a[].in = ( w81w, ( w81w, sft4a[0..0].out));
	sft8a[].in = add5_result[];
	result[] = ( w195w, ( sft64a[4..3].out, sft64a[2..1].out, sft64a[0..0].out));
	w195w = B"0";
	w81w = B"0";
END;
--VALID FILE
